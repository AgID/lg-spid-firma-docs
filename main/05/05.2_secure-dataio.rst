.. _`§5.2`:

Sistema di trasferimento sicuro dei documenti
=============================================

Ogni ente federato si dota di un sistema di trasferimento dedicato ai
documenti oggetto delle presenti Linee guida, costituito da uno storage
dedicato, un protocollo di comunicazione sicura che garantisce un
adeguato livello di confidenzialità, integrità e disponibilità, e da un
sistema di gestione dei file ricevuti.

L’interfaccia applicativa fornita dal protocollo di comunicazione per il
trasferimento di documenti dall’esterno è reso noto da ciascun ente
federato verso tutti gli enti federati, mediante l’URL che l’ente
medesimo pubblica nel metadata SPID e il cui dominio è contestualmente
riportato nei campi :code:`commonName` e :code:`subjectAltName` del proprio
certificato qualificato di sigillo elettronico, di cui al §\ :ref:`4.5 <§4.5>`, punti
14.b e 5. Tale URL indica esplicitamente il protocollo di comunicazione
sicuro, i cui dettagli sono dati in §\ :ref:`5.2.1 <§5.2.1>`.

1. Il sistema di trasferimento è, nella sua interezza, protetto da
   misure di sicurezza logica e fisica conformi almeno alle *LL.GG.
   sulle misure minime di sicurezza* (:ref:`cit. <llgg mis min sicurezza>`). Esso è inoltre adeguatamente
   protetto logicamente affinché solamente gli enti federati possano
   trasferire file mediante uno dei seguenti due flussi:

   a. .. _`flusso-a`: il sistema dell’IdP è configurato per la sola ricezione di evidenze
      informatiche provenienti dagli SP in modalità *push* (cioè con
      trasferimenti iniziati in *upstream* dal SP);

   b. .. _`flusso-b`: il sistema del SP è configurato per la sola ricezione di evidenze
      informatiche provenienti dagli IdP in modalità *push* (cioè con
      trasferimenti iniziati in *upstream* dall’IDP).

2.  SP e IdP controllano che ogni file creato presso il proprio storage
    soddisfi quanto prescritto nel §\ :ref:`4.2 <§4.2>`. Non sono permessi file non
    conformi a quanto prescritto.

3.  L’IdP rimuove dallo storage i file ricevuti per i quali non sia
    pervenuta, entro un tempo limite di **10 secondi**, una richiesta di
    autenticazione proveniente dal SP.

4.  IdP e SP verificano l’integrità dei documenti ricevuti
    ricalcolandone l’impronta e confrontandola con quella contenuta,
    rispettivamente, nella richiesta e nella risposta di autenticazione
    che le accompagnano.

5.  IdP e SP verificano l’autenticità dei :ref:`QSeal <QSeal>`
 della controparte e l’integrità del documento ricevuto.

.. _`§5.2.1`:

Interfaccia applicativa
-----------------------

SP e IdP si scambiano evidenze informatiche in formato :ref:`JWS <JWS>`, in accordo
con le specifiche :ref:`OpenAPI <OAS>` su canale HTTPS, formate mediate la seguente
procedura:

1. predisposizione di una struttura :ref:`JSON <JSON>` contenente sia i **dati**
   (cioè il documento oggetto di sottoscrizione) che i suoi
   **metadati**, di seguito elencati:

2. codifica del messaggio di cui al punto 1 in un pacchetto :ref:`JWT <JWT>`;

3. conversione del pacchetto di cui al punto 2 in :ref:`JWS <JWS>`, mediante il
   metodo *Compact Serialization* (cfr.
   :RFC:`7515`), mediante creazione di apposito QSeal.

Gli algoritmi crittografici utilizzati lungo l’intera procedura sopra
descritta sono definiti in §\ :ref:`6 <§6>`. I pacchetti JWS sono caratterizzati dalla
presenza degli identificativi unici di sessione (cfr. :ref:`§5 <§5>`).

Le strutture JSON in base alle quali sono prodotti i pacchetti JWS
scambiati durante i flussi :ref:`a <flusso-a>` e :ref:`b <flusso-b>` sono chiamate, rispettivamente,
**pacchetto di andata** e **pacchetto di ritorno**.

L’intestazione (*header*) comune ai pacchetti di andata e ritorno
contiene i seguenti parametri obbligatori:

-  :code:`typ` — valorizzato con la stringa “``JOSE``”;

-  :code:`alg` — valorizzato con l’identificativo JWA dell’algoritmo
   crittografico utilizzato per la firma del pacchetto JWS, secondo
   quanto indicato al §\ :ref:`6 <§6>`;

-  :code:`x5c` — valorizzato con il certificato qualificato di sigillo
   elettronico dell’ente inviante (codificato in *Base64*, cfr.
   :RFC:`4648`);

-  :code:`crit` — valorizzato con una lista di un unico elemento
   “:code:`x5c`”, ad indicare che la convalida del certificato di cui al
   punto precedente è obbligatoria;

Un esempio di intestazione sopra definita è:

.. code-block:: json

 {
     "typ" : "JOSE",
     "alg" : "ES256",
     "x5c" : "Certificato/codificato+Base64",
     "crit": ["x5c"]
 }

Il *payload* dei pacchetti di andata e ritorno contiene i seguenti
parametri obbligatori:

-  :code:`jti` — valorizzato con l’identificativo unico della sessione, così
   come dichiarato nella richiesta di autenticazione per firma SPID,
   epurato del prefisso “``id-``” – coincide con il valore che, nei
   pacchetti di andata e di ritorno, si trova rispettivamente
   nell’attributo:

   -  :code:`ID` dell’elemento SAML :code:`<AuthnRequest>` per il flusso :ref:`a <flusso-a>` (andata), *ovvero*

   -  :code:`InResponseTo` dell’elemento SAML :code:`<Response>` per il flusso :ref:`b <flusso-b>` (ritorno).

-  :code:`iss` — valorizzato con l’:code:`entityId`: (URL con schema HTTPS)
   dell’ente federato inviante; coincide con il valore dell’elemento :code:`<Issuer>`:

-  ``aud`` — valorizzato con l’``entityId`` (URL con schema HTTPS)
   dell’ente federato destinatario; coincide con il valore
   dell’attributo ``Destination``, rispettivamente, dell’elemento :ref:`SAML <SAML>`:

   -  :code:`<AuthnRequest>` per il pacchetto di andata (flusso :ref:`a <flusso-a>`), *ovvero*

   -  :code:`<Response>` per il pacchetto di ritorno (flusso :ref:`b <flusso-b>`).

-  :code:`iat` — valorizzato con l’orario in cui il messaggio è generato e
   inviato (rispetto al fuso orario italiano), codificato come campo
   JSON di tipo *NumericDate*;

-  :code:`filename` — valorizzato con il nome del file del documento
   inviato; coincide con il valore dell’elemento :code:`<Filename>`
   come specificato nel §\ :ref:`4.2 <§4.2>`;

-  :code:`cty` — valorizzato con la tipologia MIME del documento di cui al
   punto precedente (quindi come “``pdf``”, come da normativa :RFC:`7515`);

-  :code:`payload` — valorizzato con l’evidenza del documento informatico da
   trasferire, codificato in *Base64* (cfr. :RFC:`6848`);

-  :code:`hash` — valorizzato con una struttura JSON così costituita:

   -  :code:`method` — valorizzato con la codifica W3C della funzione di
      *hash* utilizzata per il calcolo delle impronte dei documenti e
      coincidente con il valore dell’emento SAML :code:`<DigestMethod>`,

   -  :code:`digest` — valorizzato con l’impronta del documento trasferito e
      coincidente con il valore dell’elemento SAML :code:`<DigestValue>`.

Nel pacchetto di andata:

-  :code:`signatures` — valorizzato con un *array* JSON contenente tanti
   elementi quante sono le sottoscrizioni richieste; ciascun elemento
   dell’*array* è una struttura JSON contenente:

   -  :code:`id` — valorizzato con l’identificativo univoco della firma
      nell’ambito del processo di firma,

   -  :code:`pag` — valorizzato con il numero della pagina del documento ove
      è richiesto che l’IdP apponga la componente grafica di cui al
      §\ :ref:`4.4 <§4.4>`;

   -  :code:`pos` — contenente un *array* JSON con quattro elementi di
      tipo *number* – :code:`llx`, :code:`lly`, :code:`urx` e :code:`ury`
      - valorizzati rispettivamente con l'ascissa e l'ordinata del vertice
      inferiore sinistro, l'ascissa e l'ordinata del vertice superiore destro
      di un'area rettangolare definita al §\ :ref:`4.4 <§4.4>`, per il
      posizionamento della componente grafica del QSeal all’interno della
      pagina stessa, secondo quanto previsto tecnicamente per la
      rappresentazione di oggetti PDF *Rectangles*, §4.40 dello standard
      `ISO/IEC 32000-1 <http://wwwimages.adobe.com/www.adobe.com/content/dam/acom/en/devnet/pdf/pdfs/PDF32000_2008.pdf>`__;

   -  :code:`ref` —booleano per indicare se la firma è facoltativa
      (:code:`false`) ovvero obbligatoria (:code:`true`) per il SP richiedente.
      Se il firmatario non accetta di apporre anche solo una firma
      obbligatoria, l’intero processo di sottoscrizione termina senza
      successo e l’IdP non restituisce il documento al SP, informandolo
      della mancanza di volontà del firmatario.

Nel pacchetto di ritorno:

-  :code:`sub` — valorizzato con la stringa ``%firmatario%``
   identificativa del firmatario, come definita nel §\ :ref:`4.4 <§4.4>`;

-  :code:`ref` — valorizzato con un *array* JSON contenente tanti elementi
   quante sono le firme richieste nel pacchetto di andata; ciascun
   elemento dell’*array* è una struttura JSON contenente:

   -  :code:`id` — l’identificativo univoco della firma contenuto nel pacchetto
      di andata, valorizzato con la medesima sintassi ammessa per l’attributo
      ``name`` dell’elemento :code:`<FileTransferService>` definito nel
      §\ :ref:`4.6 <§4.6>`;

   -  :code:`signed` — valorizzato con un booleano che conferma
      l’apposizione (:code:`true`) o meno (:code:`false`) della firma.

I pacchetti sono validi se conformi al presente provvedimento e a
eventuali successive indicazioni dell’:ref:`Agenzia <AgID>`.

Seguono un esempio del pacchetto di andata e del relativo pacchetto
di ritorno per la sottoscrizione di un documento per il quale sono
richieste due firme: la prima, a pagina 3, obbligatoria; la seconda,
a pagina 7, facoltativa. Nella risposta, l’IdP informa il SP che
l’utente ha apposto solo la firma obbligatoria.

Esempio di pacchetto di andata:

.. code-block:: json

 {
     "jti" : " SessionID ",
     "iss" : " https://url-SP-inviante ",
     "aud" : " https://url-IdP-ricevente ",
     "iat" : 1563235200,
     "filename" : "AgID_20190824T183000.pdf",
     "cty" : "pdf",
     "digest" : {
         "method" : " schema://funzione_hash ",
         "value" : " ImprontaDocumento-1 "
     },
     "signatures" : [
         {
             "id"  : "1",
             "pag" : 3,
             "pos" : {
                 "llx":89.9446,
                 "lly":719.976,
                 "urx":89.9446,
                 "ury":719.976
             },
             "req" : true
         },
         {
             "id"  : "2",
             "pag" : 7,
             "pos" : {
                 "llx":240.734,
                 "lly":686.297,
                 "urx":390.768,
                 "ury":718.421
             },
             "req" : false
         }
     ],
     "payload" : " BlobDocumento-1 + […] + codificatoBase64 "
 }

Esempio di pacchetto di ritorno:

.. code-block:: json

 {
     "jti" : " SessionID ",
     "iss" : " https://url-IdP-inviante ",
     "aud" : " https://url-SP-ricevente ",
     "sub" : "Mario Rossi/CF:IT-RSSMR064T30H501H",
     "iat" : 1563235220,
     "filename" : "AgID_20190824T183000.pdf",
     "cty" : "pdf",
     "digest" : {
         "method" : " schema://funzione_hash ",
         "value" : " ImprontaDocumento-2 "
     },
     "ref" : [
         {
             "id"  : "1",
             "signed" : true
         },
         {
             "id"  : "2",
             "signed" : false
         }
     ],
     "payload" : " BlobDocumento-2 + […] + codificatoBase64 "
 }

.. discourse::

:topic_identifier: 666
